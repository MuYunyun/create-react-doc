(self.webpackChunkcreate_react_doc=self.webpackChunkcreate_react_doc||[]).push([[3803],{23803:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>u});var r=t(59713),a=t.n(r),o=t(6479),p=t.n(o),c=(t(67294),t(3905));function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function m(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var i={};function u(e){var n=e.components,t=p()(e,["components"]);return(0,c.kt)("wrapper",m(m(m({},i),t),{},{components:n,mdxType:"MDXLayout"}),(0,c.kt)("h2",null,"使用自定义主题"),(0,c.kt)("p",null,"切换主题非常简单, 只需要将根目录文件 ",(0,c.kt)("inlineCode",{parentName:"p"},"config.yml")," 中的 ",(0,c.kt)("inlineCode",{parentName:"p"},"theme")," 更改为您想使用的主题即可。"),(0,c.kt)("pre",null,(0,c.kt)("code",m({parentName:"pre"},{className:"language-diff"}),"+ theme: custom-theme\n")),(0,c.kt)("h3",null,"如何开发自定义主题包"),(0,c.kt)("p",null,"create-react-doc 脚手架提供了脚本命令 ",(0,c.kt)("inlineCode",{parentName:"p"},"react-doc theme")," 用来一键创建主题包开发环境。"),(0,c.kt)("p",null,(0,c.kt)("img",m({parentName:"p"},{src:"http://with.muyunyun.cn/2e4a4b11f96c0d38759700c05fe96267.gif",alt:null}))),(0,c.kt)("pre",null,(0,c.kt)("code",m({parentName:"pre"},{className:"language-js"}),"// 安装 create-react-doc\nyarn add create-react-doc -g\n// 执行 react-doc theme 并输入主题包名字\nreact-doc theme\n")),(0,c.kt)("p",null,"进入到所创建主题目录, 执行 ",(0,c.kt)("inlineCode",{parentName:"p"},"yarn && yarn start"),", 此时会自动打开浏览器, 并在屏幕中央显示 ",(0,c.kt)("inlineCode",{parentName:"p"},"Write docs happily now."),"。如下图所示:"),(0,c.kt)("p",null,(0,c.kt)("img",m({parentName:"p"},{src:"http://with.muyunyun.cn/1a2bf34700afd77a95014d2d5f359ffa.jpg",alt:null}))),(0,c.kt)("p",null,"恭喜你, 此时你已经将主题开发环境配置完成。接着便可以开始愉快地定制个人主题了。"),(0,c.kt)("p",null,"在所创建的主题项目中支持使用 ",(0,c.kt)("inlineCode",{parentName:"p"},"React 17")," 以及 ",(0,c.kt)("inlineCode",{parentName:"p"},"less")," 语法。"),(0,c.kt)("pre",null,(0,c.kt)("code",m({parentName:"pre"},{className:"language-js"}),"import { Switch, Route } from 'react-router-dom'\nimport styles from './index.less'\n\nconst CustomTheme = (props: CustomThemeProps) => {\n  return (\n    <Switch>\n      <Route\n        path=\"/\"\n        render={() => <div className={styles.center}>Welcome to your own theme</div>}\n      />\n    </Switch>\n  )\n}\n\nexport default CustomTheme\n")),(0,c.kt)("p",null,"CustomThemeProps 的接口类型暴露了菜单资源 ",(0,c.kt)("inlineCode",{parentName:"p"},"menuSource")," 与路由资源 ",(0,c.kt)("inlineCode",{parentName:"p"},"routeData"),", 自定义主题时可以按需使用它们。"),(0,c.kt)("pre",null,(0,c.kt)("code",m({parentName:"pre"},{className:"language-js"}),"interface CustomThemeProps {\n  /** 菜单资源 */\n  menuSource: {\n    /** 文件名称 eg: '快速上手.md' */\n    name: string\n    /** 文件扩展名 eg: '.md' */\n    extension: string\n    /** 文件路径 eg: '/docs/快速上手.md' */\n    path: string\n    /** 路由路径 eg: ‘/快速上手’ */\n    routePath: string\n    /** 文件大小 eg: 924 */\n    size: number\n    /** 文件类型 eg: 'file' */\n    type: string\n    /** 文件创建日期 eg: '2020-11-11' */\n    birthtime: string\n    /** 文件修改日期 eg: '2021-01-14' */\n    mtime: string\n  }[]\n  /** 路由资源 */\n  routeData: {\n    /** 文件名称 eg: '快速上手.md' */\n    article: string\n    /** 异步加载 markdown 组件函数 */\n    component: AsyncRouteComponent(props)\n    /** markdown 文章信息对象。若为文件则有 title 字段, 若为文件夹则无 title 字段 */\n    mdconf: { title?: string }\n    /** 文件路径 eg: '/docs/快速上手' */\n    path: string\n  }[]\n}\n")),(0,c.kt)("p",null,"此外在自定义主题文件中可以自由使用由 webpack 注入的 ",(0,c.kt)("inlineCode",{parentName:"p"},"DOCSCONFIG")," 对象中的变量, DOCSCONFIG 中的变量与项目根目录中的 ",(0,c.kt)("inlineCode",{parentName:"p"},"config.yml")," 文件变量一一对应。"),(0,c.kt)("p",null,"比如 ",(0,c.kt)("inlineCode",{parentName:"p"},"config.yml")," 配置如下所示:"),(0,c.kt)("pre",null,(0,c.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"menu: Introduction\ntheme: crd-seed\nuser: muyunyun\nrepo: https://github.com/MuYunyun/create-react-doc\nlanguage: en\n")),(0,c.kt)("p",null,"则主题项目中可以通过如下方式获取到 ",(0,c.kt)("inlineCode",{parentName:"p"},"config.yml")," 配置属性。"),(0,c.kt)("pre",null,(0,c.kt)("code",m({parentName:"pre"},{className:"language-js"}),"const { menu, theme, user,  } = DOCSCONFIG || {}\n")))}u.isMDXComponent=!0}}]);