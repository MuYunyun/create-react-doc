(self.webpackChunkcreate_react_doc=self.webpackChunkcreate_react_doc||[]).push([[366],{3366:n=>{n.exports="## 高阶用法\n\n与 git 文件结构类似, 如果在展示的文件夹中有私有文件不方便展示在文档站点, 可以在 `.gitignore` 文件中设置过滤文件, 这样它们就不会展示在文档站点中了。eg: [.gitignore](https://github.com/MuYunyun/blog/blob/main/.gitignore)\n\n## 数学公式\n\n以 [MathJax](https://github.com/mathjax/MathJax) 为例, 当书写以下数学符号时\n\n```markdown\n<p>\n  When $a \\ne 0$, there are two solutions to \\(ax^2 + bx + c = 0\\) and they are\n  $$x = {-b \\pm \\sqrt{\\texttip{b^2-4ac}{descriminant}} \\over 2a}.$$\n</p>\n```\n\n会被转换为:\n\n<p>\n  When $a \\ne 0$, there are two solutions to \\(ax^2 + bx + c = 0\\) and they are\n  $$x = {-b \\pm \\sqrt{\\texttip{b^2-4ac}{descriminant}} \\over 2a}.$$\n</p>\n\n\x3c!-- ![](http://with.muyunyun.cn/7a3edd13acb492afb4a3b1936c35e26d.jpg) --\x3e\n\n### 使用方式\n\n在 `config.yml` 文件中加入 `inject` 字段。\n\n```diff\n+ inject: injectLogic/index.js\n```\n\n然后在根目录新建与 `inject` 字段相对应的文件, 声明 `injectWithPathname` 函数, 写入[自定义逻辑](https://github.com/MuYunyun/create-react-doc/injectLogic/index.js), 完成 MathJax 的使用。\n\n```js\n// perf injectWithPathname logic every pathname changes\nconst injectWithPathname = (pathname) => {\n  // demo for using mathjax. see https://github.com/MuYunyun/create-react-doc/issues/63\n  if (pathname !== '/高阶用法') return;\n  window.MathJax = {\n    tex: {\n      inlineMath: [['$', '$'], ['\\\\(', '\\\\)']],\n    },\n    svg: {\n      fontCache: 'global',\n    },\n  };\n  const script = document.createElement('script');\n  script.src = 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js';\n  const tag = 'mathjax';\n  script.id = tag;\n  script.async = true;\n  const scriptNode = document.getElementById(tag);\n  try {\n    if (!scriptNode) {\n      document.head.appendChild(script);\n    } else {\n      scriptNode.remove();\n      document.head.appendChild(script);\n    }\n  } catch (error) {}\n};\n\nmodule.exports = { injectWithPathname };\n```"}}]);