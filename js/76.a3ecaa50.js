(self.webpackChunkcreate_react_doc=self.webpackChunkcreate_react_doc||[]).push([[76],{24076:n=>{n.exports="### 使用自定义主题\n\n切换主题非常简单, 只需要将根目录文件 `config.yml` 中的 `theme` 更改为您想使用的主题即可。\n\n```diff\n+ theme: custom-theme\n```\n\n### 如何开发自定义主题包\n\ncreate-react-doc 脚手架提供了脚本命令 `react-doc theme` 用来一键创建主题包开发环境。\n\n![](http://with.muyunyun.cn/2e4a4b11f96c0d38759700c05fe96267.gif)\n\n```bash\n// 安装 create-react-doc\nyarn add create-react-doc -g\n// 执行 `react-doc theme` 并输入主题包名字\nreact-doc theme\n```\n\n进入到所创建主题目录, 执行 `yarn && yarn start`, 浏览器会自动打开浏览器, 并在屏幕中央显示 `Welcome to your own theme`。\n\n![](http://with.muyunyun.cn/1721111f30373c7dbca268db4b0d824f.jpg)\n\n恭喜你, 此时你已经将主题开发环境配置完成。接着便可以开始愉快地定制个人主题了。\n\n在所创建的主题项目中支持使用 `React 17` 以及 `less` 语法。\n\n```js\nimport { Switch, Route } from 'react-router-dom'\nimport styles from './index.less'\n\nconst CustomTheme = (props: CustomThemeProps) => {\n  return (\n    <Switch>\n      <Route\n        path=\"/\"\n        render={() => <div className={styles.center}>Welcome to your own theme</div>}\n      />\n    </Switch>\n  )\n}\n\nexport default CustomTheme\n```\n\nCustomThemeProps 的接口类型定义如下, 自定义主题时可以自由使用它们。\n\n```js\ninterface CustomThemeProps {\n  menuSource: {\n    // 文件名称 eg: '快速上手.md'\n    name: string\n    // 文件扩展名 eg: '.md'\n    extension: string\n    // 文件路径 eg: '/docs/快速上手.md'\n    path: string\n    // 路由路径 eg: ‘/快速上手’\n    routePath: string\n    // 文件大小 eg: 924\n    size: number\n    // 文件类型 eg: 'file'\n    type: string\n    // 文件创建日期 eg: '2020-11-11'\n    birthtime: string\n    // 文件修改日期 eg: '2021-01-14'\n    mtime: string\n  }[]\n}\n```\n\n此外在自定义主题文件中可以自由使用由 webpack 注入的 `DOCSCONFIG` 对象中的变量, DOCSCONFIG 中的变量与项目根目录中的 `config.yml` 文件变量一一对应。\n\n比如 `config.yml` 配置如下所示:\n\n```bash\nmenu: Introduction\ntheme: crd-seed\nuser: muyunyun\nrepo: https://github.com/MuYunyun/create-react-doc\nlanguage: en\n```\n\n则主题项目中则可以通过如下方式获取到 `config.yml` 配置属性。\n\n```js\nconst { menu, theme, user,  } = DOCSCONFIG || {}\n```"}}]);