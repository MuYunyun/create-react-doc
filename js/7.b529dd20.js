(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{699:function(n,t){n.exports='## 站点发布\n\n在 [快速上手](http://muyunyun.cn/create-react-doc/#/%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B) 一节中介绍了如何快速搭建站点, 本节将介绍如何将搭建好的站点打包、发布到 gh-pages。\n\n### 自动打包发布到 gh-pages (推荐)\n\n初始化的模板项目集成了 `Github action` 的 [ci 配置](https://github.com/MuYunyun/create-react-doc/blob/main/packages/templates/default/.github/workflows/gh-pages.yml), 使用方只需在 main 分支执行 `git push` 即可以完成站点的自动部署。\n\n![](http://with.muyunyun.cn/ea24d511f76efe5ba5d13bb6b1609aac.jpg)\n\n如果是第一次部署, 在执行以下操作后, 需要在项目的 setting 选项卡中将 Github Pages 选择为 gh-pages。(详情见 [First Deployment with GITHUB_TOKEN](https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-first-deployment-with-github_token))\n\n```bash\ngit init\ngit add .\ngit commit -m "first commit"\ngit branch -M main\ngit remote add origin https://github.com/用户或组织名/项目名.git\ngit push -u origin main\n```\n\n### 手动打包发布\n\ntodo: write\n\n### `npm run build` or `yarn build`\n\n将要发布的文档站点进行打包构建, 此时的文档网站已准备好进行部署。\n\n### `npm run deploy` or `yarn deploy`\n\n根据 [config.yml](https://github.com/MuYunyun/create-react-doc#configyml) 里的 user 和 repo 参数, 文档站点默认将会发布到 GitHub Pages'}}]);